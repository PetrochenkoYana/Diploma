using CSML;
using ParticularDataSystem;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
namespace Generator
{ 
    public class Generator
    {
        public Matrix Q_00;
        public Matrix Q_01;
        public Matrix Q_10;
        public Matrix Q_0;
        public Matrix Q_1;
        public Matrix Q_2;
        public Matrix G_0;
        public Matrix G;
        public Generator(ParticularSystem obj)
        {
            #region lambda 
            var D = obj.D_0 + obj.D_1;
            for (int i = 1; i <= D.RowCount; i++)
            {
                D[i, D.ColumnCount] = new Complex(1);
            }

            var b = new Matrix(1, D.RowCount);
            b[1, D.RowCount] = new Complex(1);
            var result = b * Matrix.CastingToMatrix(Matrix.reverse(D.CastingToDouble()));
            var result2 = result * obj.D_1;
            obj.lambda = (result2 * Matrix.Ones(result2.ColumnCount, 1))[1,1];
            #endregion
            #region h
            var H = obj.H_0 + obj.H_1;
            for (int i = 1; i <= H.RowCount; i++)
            {
                H[i, H.ColumnCount] = new Complex(1);
            }

            var vector = new Matrix(1, H.RowCount);
            vector[1, H.RowCount] = new Complex(1);
            var res = b * H.Inverse();
            var res2 = res * obj.H_1;
            obj.h = (res2 * Matrix.Ones(res2.ColumnCount, 1))[1, 1];
            #endregion
            var b11 = obj.beta_1 * (-obj.S_1).Inverse();
            obj.b1 = (b11 * Matrix.Ones(b11.ColumnCount, 1))[1,1];
            obj.mu_1 = new Complex(Math.Pow(obj.b1.Re, -1));
            var b22 = obj.beta_2 * (-obj.S_2).Inverse();
            obj.b2 = (b22 * Matrix.Ones(b22.ColumnCount, 1))[1, 1];
            obj.mu_2 = new Complex(Math.Pow(obj.b2.Re, -1));
            var t11 = obj.tau_1 * (-obj.T_1).Inverse();
            obj.t1 = (t11 * Matrix.Ones(t11.ColumnCount, 1))[1, 1];
            obj.nu_1 = new Complex(Math.Pow(obj.t1.Re, -1));

            var s = obj.S_1 & obj.S_2;
            obj.S_0 = -(s) * Matrix.Ones(s.ColumnCount, 1);
            obj.T_0_1 = -obj.T_1 * Matrix.Ones(obj.T_1.ColumnCount, 1);
            obj.T_0_2 = -obj.T_2 * Matrix.Ones(obj.T_2.ColumnCount, 1);
            obj.S_0_1 = -obj.S_1 * Matrix.Ones(obj.S_1.ColumnCount, 1);
            obj.S_0_2 = -obj.S_2 * Matrix.Ones(obj.S_2.ColumnCount, 1);
            int v_ = Convert.ToInt32(obj.v.Re) + 1;
            int w_ = Convert.ToInt32(obj.w.Re) + 1;
            int R_1 = Convert.ToInt32(obj.R_1.Re);
            int R_2 = Convert.ToInt32(obj.R_2.Re);
            int M_1 = Convert.ToInt32(obj.M_1.Re);
            int M_2 = Convert.ToInt32(obj.M_2.Re);
            obj.H = obj.H_0 + obj.H_1;
            var d = (Matrix.Identity(w_) % ((1 - obj.p) * obj.H_1)) % obj.tau_2;
            #region Q_00
            var block_00_0 = obj.D_0 & obj.H_0;
            var block_00_1 = (Matrix.Identity(w_) % (obj.p * obj.H_1)) % obj.tau_1;
            var block_00_2 = (Matrix.Identity(w_) % ((1 - obj.p) * obj.H_1)) % obj.tau_2;
            var block_00_3 = Matrix.Identity((w_) * (v_)) % obj.T_0_1;
            var block_00_4 = (obj.D_0 & obj.H) & obj.T_1;
            var block_00_6 = Matrix.Identity((w_) * (v_)) % obj.T_0_2;
            var blocks_00_8 = (obj.D_0 & obj.H) & obj.T_2;
            this.Q_00 = FillInBlockMatrix(block_00_0, block_00_1, block_00_2, block_00_3, block_00_4,
                Matrix.Zeros(block_00_3.RowCount, block_00_2.ColumnCount), block_00_6,
                Matrix.Zeros(block_00_6.RowCount, block_00_1.ColumnCount), blocks_00_8
                );
            #endregion

            #region Q_01
            var block_01_0 = ((obj.D_1 % Matrix.Identity(v_)) % obj.beta_1) % obj.beta_2;
            var block_01_1 = ((obj.D_1 % Matrix.Identity(v_)) % obj.beta_2) % Matrix.Identity(R_1);
            var block_01_2 = ((obj.D_1 % Matrix.Identity(v_)) % obj.beta_1) % Matrix.Identity(R_2);
            this.Q_01 = GenerateDiagonalMatrix(block_01_0, block_01_1, block_01_2);
            #endregion

            #region Q_10
            var block_10_0 = Matrix.Identity((w_) * (v_)) % obj.S_0;
            var block_10_1 = Matrix.Identity((w_) * (v_)) % obj.S_0_2 % Matrix.Identity(R_1);
            var block_10_2 = Matrix.Identity((w_) * (v_)) % obj.S_0_1 % Matrix.Identity(R_2);
            this.Q_10 = GenerateDiagonalMatrix(block_10_0, block_10_1, block_10_2);
            #endregion

            #region Q_0
            var r = obj.beta_1 % obj.beta_2;
            var block_0_0 = Matrix.Identity((w_) * (v_)) % (obj.S_0 * r);
            var block_0_1 = (Matrix.Identity((w_) * (v_)) % (obj.S_0_2 * obj.beta_2)) % Matrix.Identity(R_1);
            var block_0_2 = (Matrix.Identity((w_) * (v_)) % (obj.S_0_1 * obj.beta_1)) % Matrix.Identity(R_2);
            this.Q_0 = GenerateDiagonalMatrix(block_0_0, block_0_1, block_0_2);
            #endregion

            #region Q_1
            var block_1_0 = obj.D_0 & obj.H_0 & obj.S_1 & obj.S_2;
            var block_1_1 = (Matrix.Identity(w_) % (obj.p * obj.H_1)) % Matrix.Ones(M_1, 1)
                % Matrix.Identity(M_2) % obj.tau_1;
            var block_1_2 = (Matrix.Identity(w_) % ((1 - obj.p) * obj.H_1)) % Matrix.Identity(M_1)
                % Matrix.Ones(M_2, 1) % obj.tau_2;
            var block_1_3 = Matrix.Identity((w_) * (v_)) % obj.beta_1 % Matrix.Identity(M_2) % obj.T_0_1;
            var block_1_4 = obj.D_0 & obj.H & obj.S_2 & obj.T_1;
            var block_1_6 = Matrix.Identity((w_) * (v_)) % Matrix.Identity(M_1) % obj.beta_2 % obj.T_0_2;
            var blocks_1_8 = obj.D_0 & obj.H & obj.S_1 & obj.T_2;
            this.Q_1 = FillInBlockMatrix(block_1_0, block_1_1, block_1_2, block_1_3, block_1_4,
                Matrix.Zeros(block_1_3.RowCount, block_1_2.ColumnCount), block_1_6,
                Matrix.Zeros(block_1_6.RowCount, block_1_1.ColumnCount), blocks_1_8
                );
            #endregion

            #region Q_2
            var block_2_0 = obj.D_1 % Matrix.Identity(v_ * M_1 * M_2);
            var block_2_1 = obj.D_1 % Matrix.Identity(v_ * M_2 * R_1);
            var block_2_2 = obj.D_1 % Matrix.Identity(v_ * M_1 * R_2);
            this.Q_2 = GenerateDiagonalMatrix(block_2_0, block_2_1, block_2_2);
            #endregion

        }
        public static Matrix FillInBlockMatrix(params Matrix[] blocks)
        {
            Matrix resultMatrix = null;
            if (blocks.Length == 9)
            {
                var C = new MatrixOfMatrix(9, 1);

                for (int i = 0; i <= 6; i = i + 3)
                {
                    C[i + 1, 1] = Matrix.VerticalConcat(Matrix.VerticalConcat(blocks[i], blocks[i + 1]), blocks[i + 2]);

                }
                resultMatrix = Matrix.HorizontalConcat(Matrix.HorizontalConcat(C[1, 1], C[4, 1]), C[7, 1]);
                //for (int i = 2; i <= C.RowCount - 1; i++)
                //{
                //    resultMatrix = Matrix.HorizontalConcat(resultMatrix, C[i + 1, 1]);
                //}
            }

            if (blocks.Length == 12)
            {
                var C = new MatrixOfMatrix(14, 1);

                for (int i = 0; i < 12; i = i + 4)
                {
                    C[i + 1, 1] = Matrix.VerticalConcat(Matrix.VerticalConcat(Matrix.VerticalConcat(blocks[i], blocks[i + 1]), blocks[i + 2]), blocks[i + 3]);

                }
                resultMatrix = Matrix.HorizontalConcat(Matrix.HorizontalConcat(C[1, 1], C[5, 1]), C[9, 1]);
                //for (int i = 2; i <= C.RowCount - 1; i++)
                //{
                //    resultMatrix = Matrix.HorizontalConcat(resultMatrix, C[i + 1, 1]);
                //}
            }
            return resultMatrix;
        }
        public static Matrix GenerateDiagonalMatrix(params Matrix[] blocks)
        {
            Matrix result = null;
            if (blocks.Length == 3)
            {
                result = Generator.FillInBlockMatrix(blocks[0],
                    Matrix.Zeros(blocks[0].RowCount, blocks[1].ColumnCount),
                    Matrix.Zeros(blocks[0].RowCount, blocks[2].ColumnCount),
                    Matrix.Zeros(blocks[1].RowCount, blocks[0].ColumnCount),
                    blocks[1],
                    Matrix.Zeros(blocks[1].RowCount, blocks[2].ColumnCount),
                    Matrix.Zeros(blocks[2].RowCount, blocks[0].ColumnCount),
                    Matrix.Zeros(blocks[2].RowCount, blocks[1].ColumnCount),
                    blocks[2]
                    );
            }
            return result;
        }
        public static void IsRight(Generator g,ParticularSystem obj)
        {
            FileStream fs = new FileStream("C:/Users/Gaiduk/documents/visual studio 2015/Projects/Diploma/InputData_Handling/Test.txt", FileMode.Create);
            // First, save the standard output.
            TextWriter tmp = Console.Out;
            StreamWriter sw = new StreamWriter(fs);
            Console.SetOut(sw);
            Console.WriteLine("lambda "+$"{obj.lambda}");
            Console.WriteLine("h " + $"{obj.h}");
            Console.WriteLine("b1 " + $"{obj.b1}");
            Console.WriteLine("mu_1 " + $"{obj.mu_1}");
            Console.WriteLine("b2 " + $"{obj.b2}");
            Console.WriteLine("mu_2 " + $"{obj.mu_2}");
            Console.WriteLine("t1 " + $"{obj.t1}");
            Console.WriteLine("nu_1 " + $"{obj.nu_1}");
            var result = FillInBlockMatrix(g.Q_00, g.Q_01, Matrix.Zeros(g.Q_00.RowCount, g.Q_2.ColumnCount), Matrix.Zeros(g.Q_00.RowCount, g.Q_2.ColumnCount),
                g.Q_10, g.Q_1, g.Q_2, Matrix.Zeros(g.Q_10.RowCount, g.Q_2.ColumnCount), Matrix.Zeros(g.Q_0.RowCount, g.Q_10.ColumnCount), g.Q_0, g.Q_1, g.Q_2);
            Complex[] sum = new Complex[120];
            for (int i = 0; i < sum.Length; i++)
                sum[i] = new Complex();
            for (int i = 1; i <=result.RowCount; i++)
            {
                for (int j = 1; j <= result.ColumnCount; j++)
                {
                    sum[i] += result[i, j];
                }
                Console.WriteLine($"{i} " + sum[i]);
            }
            var r = Matrix.VerticalConcat(g.Q_00, g.Q_01);
            //Complex[] sum = new Complex[100];
            //for (int i = 0; i < sum.Length; i++)
            //    sum[i] = new Complex();
            //for (int i = 1; i < r.RowCount; i++)
            //{
            //    for (int j = 1; j < r.ColumnCount; j++)
            //    {
            //        sum[i] += r[i, j];
            //    }
            //    Console.WriteLine(sum[i]);
            //}
            var p = r * Matrix.Ones(r.ColumnCount, 1);
        }
        public Complex ErgodicityCondition()
        {
            var A = this.Q_0 + this.Q_1 + this.Q_2;
            for (int i = 1; i <= A.RowCount; i++)
            {
                A[i, A.ColumnCount] = new Complex(1);
            }
          
            var b = new Matrix(1, A.RowCount);
            b[1, A.RowCount] = new Complex(1);
            var p= Matrix.reverse(A.CastingToDouble());
            var w = A * Matrix.CastingToMatrix(p);
            var result = b * Matrix.CastingToMatrix(p);

            var condition1 = result * this.Q_2;
            var condition2 = result * this.Q_0;
            var d = condition1 * Matrix.Ones(condition1.ColumnCount, 1);
            var t = condition2 * Matrix.Ones(condition2.ColumnCount, 1);
            var rho = d[1,1] / t[1,1];
            if ((condition1 * Matrix.Ones(condition1.ColumnCount, 1))[1, 1] < (condition2 * Matrix.Ones(condition2.ColumnCount, 1))[1, 1])
            {
                return rho;
            }
            else
                return new Complex(-1);
        }
        public Matrix SearchForStationaryDistribution_Algoritm_2(ParticularSystem obj)
        {

            var R = new Matrix(this.Q_0.RowCount, this.Q_0.ColumnCount);

            var reve = Matrix.CastingToMatrix(Matrix.reverse((-this.Q_1).CastingToDouble()));
            var IterationR = (((R*R) * this.Q_0) + this.Q_2) * reve;
            int l = 0;
            var thvvjv = (Q_0 + Q_2).MaxNorm() < Q_1.MaxNorm();
            while ((IterationR - R).MaxNorm() > 0.000001)
            {
                //Console.WriteLine((IterationR - R).MaxNorm());
                R = IterationR;
                IterationR = (((R * R) * this.Q_0) + this.Q_2) * reve;
                l++;
                int tt = 1;
                double[] ma = new double[48];
                //while (tt != 47)
                //{
                //    double rr = 0.0;
                //    for (int j = 1; j <= IterationR.ColumnCount; j++)
                //    {
                //        rr += R[tt, j].Re;
                //    }
                //    ma[tt] = rr;
                //    tt++;
                //    // res0 += p_i[0][1,i].Re;
                //}
            }
            List<Matrix> ListR = new List<Matrix>();
            ListR.Add(new Matrix(this.Q_0.RowCount, this.Q_0.ColumnCount));

            var rever = Matrix.CastingToMatrix(Matrix.reverse((-this.Q_1).CastingToDouble()));
            ListR.Add( (((ListR[0] * ListR[0]) * this.Q_0) + this.Q_2) * rever);
            int lllll = 1;
            while ((ListR[lllll] - ListR[lllll-1]).MaxNorm() > 0.000001)
            {
                //Console.WriteLine((IterationR - R).MaxNorm());
                ListR.Add( (((ListR[lllll] * ListR[lllll]) * this.Q_0) + this.Q_2) * reve);
                lllll++;
                int tt = 1;
                double[] ma = new double[48];
                //while (tt != 47)
                //{
                //    double rr = 0.0;
                //    for (int j = 1; j <= IterationR.ColumnCount; j++)
                //    {
                //        rr += R[tt, j].Re;
                //    }
                //    ma[tt] = rr;
                //    tt++;
                //    // res0 += p_i[0][1,i].Re;
                //}
            }

            int ii = 1;
            double[] m = new double[50];
            //R = new Matrix("0.671576203628739 , 0.124903259450456 , 0.165516715361152 , 0.0578774697175372 , 0.0012571205103576 , 0.00031316357991743 , 0.000409558290904182 , 0.000170462728570816 , 0.832912587885765 , 0.344664125075272 , 0.446544180263924 , 0.305495911626814 , 0.206942300634113 , 0.0856681176064631 , 0.114019550208382 , 0.0934321179908616 , 0.00382645576428331 , 0.016167254000999 , 0.0015868549128731 , 0.00459503773607877 , 3.3921667347979E-05 , 0.000113102189253437 , 1.45427571593815E-05 , 3.24399302252929E-05 , 0.096019232623213 , 0.0319380114909255 , 0.0859460319222405 , 0.0182321791286664 , 0.00333104522628027 , 0.00033981094083689 , 0.00304551775352866 , 0.000199696243614277 , 0.00391831639667894 , 0.0153427129977659 , 0.00191430978940671 , 0.00553208239659057 , 3.6359847406427E-05 , 0.000107360729258785 , 1.79225262588699E-05 , 3.90301447532083E-05 , 0.0971507111356403 , 0.029569334049304 , 0.0899659106564296 , 0.0206843763643021 , 0.00339693885964901 , 0.000314060549920943 , 0.00318158723912937 , 0.000226386531131239; 0.182165957227736 , 0.547826325331323 , 0.0504627561047295 , 0.136056733504204 , 0.00098157868885974 , 0.000369745813675613 , 0.000325594883154066 , 0.000166445843975715 , 0.658946696308821 , 0.285344968471476 , 0.353922361162297 , 0.247611498138803 , 0.165610049325964 , 0.0685655127468116 , 0.091246638382909 , 0.0747753177709151 , 0.00203512888196736 , 0.0052779917926511 , 0.00282015411868732 , 0.0131506090398259 , 1.99533916519874E-05 , 3.74052361172063E-05 , 2.3318426775963E-05 , 9.17335977504692E-05 , 0.0767652456486437 , 0.0253161031069211 , 0.0688573989029035 , 0.0148649487081617 , 0.0026648468197586 , 0.000270241204945527 , 0.00243767118307422 , 0.000161733583179048 , 0.00349746098343183 , 0.0139853661898717 , 0.00166745750950349 , 0.00473079090084235 , 3.20439406044357E-05 , 9.78136749645799E-05 , 1.55237366716738E-05 , 3.33959715820046E-05 , 0.0778006928522014 , 0.023705694036919 , 0.072040723538037 , 0.0165512677299506 , 0.00271994040775865 , 0.000251631923373329 , 0.00254747197539811 , 0.000181161004416419; 0.183920185008263 , 0.0384878648749144 , 0.557870566026549 , 0.10614416334984 , 0.000950441994027547 , 0.000240429196713071 , 0.000419494001693948 , 0.000150890704005042 , 0.62451175746386 , 0.258930370993424 , 0.347317966026924 , 0.233507267662847 , 0.156853830551159 , 0.0649329136361103 , 0.0864284450879412 , 0.070820293055197 , 0.00331763445039736 , 0.0142687904998697 , 0.00132774508555134 , 0.00374392866623334 , 2.90490352452912E-05 , 9.97717829110286E-05 , 1.21077744230076E-05 , 2.64510041647947E-05 , 0.0728407001247894 , 0.0242547492470021 , 0.0651905668229684 , 0.0138152113649327 , 0.0025264730233182 , 0.000257894908963142 , 0.00230985826630753 , 0.000151335708948503 , 0.00221034394891038 , 0.00522508678085333 , 0.00275192910204871 , 0.0125962511738441 , 2.24153599492237E-05 , 3.70570424415048E-05 , 2.33459342525134E-05 , 8.78534106226497E-05 , 0.0735781829224789 , 0.0222205213240376 , 0.0682343599287288 , 0.0159009936552021 , 0.00257387974442024 , 0.00023670571380038 , 0.00241150419179362 , 0.000173151764909503; 0.173884762073396 , 0.0489764215578228 , 0.0591537764479938 , 0.515253464324856 , 0.000741471994726354 , 0.00029228762819756 , 0.000342477876518409 , 0.000147808610498127 , 0.516480250529149 , 0.214770062139119 , 0.277917472094886 , 0.201429389867827 , 0.129573470245568 , 0.0536453778444883 , 0.0713964848275365 , 0.0585061523840235 , 0.00179423497450749 , 0.00506971723943392 , 0.0023550857374888 , 0.010902043210662 , 1.7251156354681E-05 , 3.5821463137813E-05 , 1.94439972654423E-05 , 7.60592601077339E-05 , 0.0601062363560836 , 0.0198501186989623 , 0.0539024122801105 , 0.0116158856374189 , 0.00208616760442244 , 0.00021173830807804 , 0.00190823211905382 , 0.000126440881138626 , 0.00198551192470952 , 0.0050249369703788 , 0.00240278576900594 , 0.0109444608387253 , 1.98419255633422E-05 , 3.55524801706144E-05 , 2.03383159867908E-05 , 7.63416885045416E-05 , 0.0608166627480003 , 0.0183870764018969 , 0.0563933047002378 , 0.0131287284334669 , 0.00212719511231868 , 0.000195757533865696 , 0.00199295473557068 , 0.000142991977053375; 0.00297250016169537 , 0.000742516200889837 , 0.000962003306603647 , 0.000358879948704289 , 0.698349572689694 , 0.134015160525612 , 0.17866877483809 , 0.0685253593995135 , 0.440519694170912 , 0.183175261521526 , 0.237167396800505 , 0.162303895403768 , 0.597507362212999 , 0.245825067616109 , 0.327514085283811 , 0.268250094038503 , 0.000141441975829764 , 0.000390203310029973 , 5.9406579861906E-05 , 0.000118427779628663 , 5.98437873384274E-05 , 0.000246224087125451 , 2.52733173140187E-05 , 7.28788257594669E-05 , 0.0525000029896936 , 0.0172673012707244 , 0.0469709781888224 , 0.00989391667141319 , 0.00260635535798661 , 0.000452576013881672 , 0.00237080965699819 , 0.00027304475975499 , 0.000160417672706103 , 0.000371802172141819 , 7.5150313665202E-05 , 0.000142022954079897 , 6.17625297560857E-05 , 0.000233405599953449 , 3.05603194737193E-05 , 8.75890145535163E-05 , 0.0533117053201507 , 0.0159881492404003 , 0.049335052316091 , 0.0112214780331429 , 0.00265755098496248 , 0.000417143234298178 , 0.0024836958986689 , 0.000309650109445257; 0.00229581154333374 , 0.000906418689576229 , 0.000761962568539073 , 0.000358142839750587 , 0.184352834070287 , 0.578783794008886 , 0.0472835653391296 , 0.156996887981894 , 0.347964396202034 , 0.144710244721081 , 0.187338031366866 , 0.128212726487123 , 0.463950211059289 , 0.204484910294905 , 0.254312424251246 , 0.215733308429429 , 9.31061956398933E-05 , 0.000161610151637993 , 7.88774319867317E-05 , 0.000285860511908027 , 3.19528986490281E-05 , 7.80097989414955E-05 , 4.41487717412256E-05 , 0.000204635233080428 , 0.0414685229593229 , 0.0136344674784839 , 0.0371045408405215 , 0.00782146697928936 , 0.00205753487206203 , 0.000353544063010021 , 0.00187396184687279 , 0.000220120829049747 , 0.000135672498648824 , 0.000334397295906399 , 6.28741709241646E-05 , 0.000120453178080122 , 5.47852483940238E-05 , 0.000212594312607905 , 2.63944795461075E-05 , 7.42627238720549E-05 , 0.0421122731408834 , 0.0126303745245802 , 0.0389709139854099 , 0.00886396797220071 , 0.00210002590021617 , 0.000330227662633767 , 0.00196251334184206 , 0.000244500006334313; 0.00222643459052254 , 0.000567766086629278 , 0.00101113509310132 , 0.000322058675068278 , 0.185750259532352 , 0.0357348787670016 , 0.590908080608255 , 0.122411766006286 , 0.328495818535528 , 0.136593991359873 , 0.176872566195918 , 0.121035787356345 , 0.438368905061095 , 0.180358316666858 , 0.253887175578113 , 0.202386142764053 , 0.000115633452256984 , 0.000338829771740934 , 4.75139059537972E-05 , 9.55097713196078E-05 , 5.1550114285975E-05 , 0.000216980673133282 , 2.09273617394885E-05 , 5.87167969476859E-05 , 0.0391508468073549 , 0.0128776568788356 , 0.0350275176684301 , 0.00737790858928415 , 0.00194454166993296 , 0.000338300955302335 , 0.0017686235819976 , 0.000203481582662074 , 0.000106738295283346 , 0.000157253942047015 , 8.30673148450276E-05 , 0.000276311270395591 , 3.49862732903224E-05 , 7.75476022634411E-05 , 4.31382346454261E-05 , 0.000195664116935697 , 0.0397532924531665 , 0.011918539557771 , 0.0367901745434687 , 0.00837289103900494 , 0.00198080736202968 , 0.000307980143326037 , 0.00185280360395074 , 0.000234497559661424; 0.00171408207733828 , 0.00071211863090104 , 0.000822193371972518 , 0.000320169277962416 , 0.189690508969755 , 0.0366904900130953 , 0.0488173737265537 , 0.561794066606099 , 0.269957022840663 , 0.112267542171046 , 0.145353179543777 , 0.0994735450461632 , 0.361542476760338 , 0.148760658685129 , 0.198187215456689 , 0.175907714951211 , 7.70819428519155E-05 , 0.000148122836246077 , 6.42777996332523E-05 , 0.000233793744025102 , 2.80294536294585E-05 , 7.60906606056892E-05 , 3.6408831151456E-05 , 0.000167374857663664 , 0.0321733893794946 , 0.0105791682955634 , 0.0287872503634604 , 0.00606764086003755 , 0.00159698062097979 , 0.00027507967322488 , 0.0014542210900028 , 0.000170391584016758 , 9.15077657595937E-05 , 0.000146195811958623 , 7.09600084068417E-05 , 0.000237636719421316 , 3.12374431801011E-05 , 7.52266308378087E-05 , 3.73136018604698E-05 , 0.000168332941973812 , 0.0326705853173512 , 0.00979568791394618 , 0.0302352215743464 , 0.00688073272838664 , 0.00162836679374338 , 0.000253659709075387 , 0.00152298983215654 , 0.000192491652195585; 0.00163547322125176 , 0.000306370849737773 , 0.000405889035746964 , 0.000143652895467476 , 3.45919693670424E-06 , 8.52417953006015E-07 , 1.11595887266254E-06 , 4.72746200030348E-07 , 0.0425394614836089 , 0.0174027968528728 , 0.0225630742850703 , 0.0154302446093649 , 0.000656025261133145 , 0.000296416575234327 , 0.000389166056063514 , 0.000321091188946675 , 1.03055767077366E-05 , 3.96567228925422E-05 , 4.30507674836546E-06 , 1.13448016177006E-05 , 9.67624545025768E-08 , 2.77665371115944E-07 , 4.17925766693938E-08 , 8.01575654094744E-08 , 0.00110756622368264 , 0.00153801665619703 , 0.00126988554616802 , 0.000910253071601735 , 1.85625244962675E-05 , 1.11714443940547E-05 , 2.1372279598378E-05 , 6.67700019255614E-06 , 1.05497049538115E-05 , 3.77036342593795E-05 , 5.12185293262019E-06 , 1.36515760063761E-05 , 1.0197326438627E-07 , 2.64085764459235E-07 , 4.98457095355192E-08 , 9.6396437959394E-08 , 0.000873557332411233 , 0.00138115419220625 , 0.00107874514332019 , 0.0010275484051557 , 1.53813061135029E-05 , 1.00276004711638E-05 , 1.79194240553586E-05 , 7.52693353225301E-06; 0.000469446210415251 , 0.00130098267690635 , 0.000129550605598013 , 0.000326785875794724 , 2.63355150102553E-06 , 9.48031127869084E-07 , 8.63717725605673E-07 , 4.38787173272868E-07 , 0.00734542198826256 , 0.035250722308177 , 0.00545529089008628 , 0.0176856062346526 , 0.000479088962987944 , 0.000233342569851469 , 0.000281158816232661 , 0.000242452179718097 , 5.60798099498185E-06 , 1.3606534686735E-05 , 7.02898217466062E-06 , 3.14374205809973E-05 , 5.67975924767458E-08 , 9.64834799993738E-08 , 5.95587392409376E-08 , 2.19378276579768E-07 , 0.000403728792844973 , 0.000310935390406809 , 0.000914050940983019 , 0.00126831495392982 , 9.57491028332481E-06 , 2.45734516274638E-06 , 1.44482927018997E-05 , 9.0966784700481E-06 , 9.13815995076965E-06 , 3.41094302613008E-05 , 4.34510942806316E-06 , 1.15927976077439E-05 , 8.64679968773116E-08 , 2.38723043469841E-07 , 4.17034554605196E-08 , 8.18856294714323E-08 , 0.000625396719438019 , 0.000980035198869007 , 0.000737198400096129 , 0.000642376889596662 , 1.13868599715916E-05 , 7.12858053440403E-06 , 1.28365969639881E-05 , 4.74085960057813E-06; 0.000471436407963058 , 9.83282521434581E-05 , 0.00132655088798244 , 0.000255523239516099 , 2.53499843221867E-06 , 6.34159722588869E-07 , 1.08040829147824E-06 , 3.97914488094759E-07 , 0.00708717082100517 , 0.0041185951660165 , 0.0355772634265418 , 0.0138463046474215 , 0.000453608365582132 , 0.000201643335269041 , 0.000281465619137169 , 0.000225276223643121 , 8.63254824982267E-06 , 3.47218766280791E-05 , 3.48372789717812E-06 , 9.16944329204932E-06 , 7.89187279018162E-08 , 2.42923855343132E-07 , 3.31930820858015E-08 , 6.48181356212446E-08 , 0.000728969956386781 , 0.0010069397770467 , 0.000795678341776302 , 0.000513271975850041 , 1.26210996933347E-05 , 7.33209236210283E-06 , 1.40143595181837E-05 , 3.80043232212657E-06 , 5.98087658600075E-06 , 1.34114173015406E-05 , 6.86106474660154E-06 , 3.01565257668251E-05 , 6.17823014269695E-08 , 9.51696736829063E-08 , 5.93593617774575E-08 , 2.10417093198079E-07 , 0.000327960710749799 , 0.000268297440842128 , 0.000709076315546602 , 0.00115503043164891 , 8.25022437798867E-06 , 2.12031803629351E-06 , 1.16023427839807E-05 , 8.2997160221651E-06; 0.000440569622012396 , 0.000121719342499624 , 0.000147591484694499 , 0.00121896717845083 , 1.9485344543963E-06 , 7.36777430790221E-07 , 8.69174987954882E-07 , 3.77700655417074E-07 , 0.00335708422485274 , 0.00398219963243855 , 0.00431055367152963 , 0.0317888367195097 , 0.000346515888046668 , 0.000166993034952145 , 0.000213863121052255 , 0.000178690738494266 , 4.76999183492106E-06 , 1.28145229648751E-05 , 5.80413966604227E-06 , 2.60012928608691E-05 , 4.70260531381753E-08 , 9.05797463408065E-08 , 4.88220372434679E-08 , 1.81455186136991E-07 , 0.000269678226423903 , 0.00018658189052028 , 0.000615094138192988 , 0.000854898321726338 , 6.84341340584627E-06 , 1.51214552287041E-06 , 1.00640852342361E-05 , 6.1408330702263E-06 , 5.23441809591088E-06 , 1.27028573913168E-05 , 5.93306806561094E-06 , 2.61475340545839E-05 , 5.30932187777246E-08 , 8.99122235693731E-08 , 5.10077183438433E-08 , 1.82451264873891E-07 , 0.000240863277329757 , 0.000176194206683356 , 0.000519052779783156 , 0.000841305529704918 , 6.41739707739265E-06 , 1.42288214110331E-06 , 8.81454837295385E-06 , 6.05387527299283E-06; 8.10245003391893E-06 , 2.00296469629795E-06 , 2.59713360943055E-06 , 9.85251069806459E-07 , 0.00170109694178647 , 0.000328444697844043 , 0.000437879923129753 , 0.000170118388627617 , 0.00144236005024324 , 0.000661760345627491 , 0.00084519354154459 , 0.000582438586064264 , 0.039467932028446 , 0.0162121570019083 , 0.0216044900671252 , 0.017692517493317 , 3.86759659792609E-07 , 9.8039265657165E-07 , 1.63075193491935E-07 , 2.99449834599815E-07 , 1.60051660157687E-07 , 6.04050723807439E-07 , 6.79637590159137E-08 , 1.79914599393739E-07 , 0.000161382981867294 , 8.25459609972271E-05 , 0.000152980540212013 , 5.11711493009227E-05 , 1.86259379909484E-05 , 2.12618040278227E-05 , 2.11106554129604E-05 , 1.36477955552031E-05 , 4.3711927935382E-07 , 9.36445286103808E-07 , 2.03975192609479E-07 , 3.58916941813769E-07 , 1.65094233520803E-07 , 5.73640340152942E-07 , 8.11532774540414E-08 , 2.16131164637738E-07 , 0.00015723857995147 , 7.5125248112812E-05 , 0.000153644091629613 , 5.7620413379944E-05 , 1.54119233211675E-05 , 1.89150326847852E-05 , 1.85152927193117E-05 , 1.53976706892691E-05; 6.09650663568692E-06 , 2.30212209819535E-06 , 2.0000860469401E-06 , 9.3299401066571E-07 , 0.000475790905777501 , 0.00137446014598155 , 0.000122162628229032 , 0.000377264752996902 , 0.00101734007545137 , 0.000513093103561094 , 0.000590403726118679 , 0.000429705801107357 , 0.00326101504349156 , 0.0360725927380298 , 0.00181689136459618 , 0.0204323336918342 , 2.51513492382474E-07 , 4.2210589141579E-07 , 2.00363964809567E-07 , 6.89023527277584E-07 , 8.68339756399289E-08 , 2.01315748765546E-07 , 1.09583160271958E-07 , 4.8928498403559E-07 , 0.000112812651480589 , 4.20660099762871E-05 , 0.000114318814719997 , 5.00345769646809E-05 , 7.00033197397406E-06 , 2.14352815094146E-06 , 1.50749281234878E-05 , 1.95027001620384E-05 , 3.56776209726562E-07 , 8.2876110799594E-07 , 1.65033341697904E-07 , 2.99916896252003E-07 , 1.420282943729E-07 , 5.18211067635622E-07 , 6.82323819786593E-08 , 1.81839661556763E-07 , 0.000119041929292859 , 5.42381898470049E-05 , 0.000114606249343525 , 3.88261770442458E-05 , 1.11180745791035E-05 , 1.33399951804706E-05 , 1.26045615081375E-05 , 9.06424703053556E-06; 5.87268293974682E-06 , 1.48124589321844E-06 , 2.57696010637534E-06 , 8.38823142998493E-07 , 0.000476675177217933 , 9.17925285518223E-05 , 0.00140508241750811 , 0.000294747348100042 , 0.000959630167951329 , 0.00043250236820447 , 0.000595615869853103 , 0.000395234953038002 , 0.00301521754896489 , 0.00126345747444771 , 0.0363750617403164 , 0.0155798557532544 , 3.03152890345594E-07 , 8.36635593596193E-07 , 1.25149227726714E-07 , 2.37436469567719E-07 , 1.3306494040731E-07 , 5.27684120815423E-07 , 5.43831963720791E-08 , 1.43661699553093E-07 , 0.0001137761457108 , 5.5263782957945E-05 , 0.000105878947376831 , 3.16386988572944E-05 , 1.22725880925333E-05 , 1.37062373284768E-05 , 1.30537009250638E-05 , 7.10326864901286E-06 , 2.84048436000604E-07 , 4.08457569390513E-07 , 2.10964750599596E-07 , 6.67360090605212E-07 , 9.33891276300433E-08 , 1.99067396604886E-07 , 1.0707174579527E-07 , 4.68458487101094E-07 , 0.000106096079861796 , 3.64532439881024E-05 , 0.000107909456024323 , 4.83401504165717E-05 , 6.17348484992604E-06 , 1.81964018815616E-06 , 1.20623240896494E-05 , 1.74603417082912E-05; 4.46643906720523E-06 , 1.78085078543018E-06 , 2.06881996435098E-06 , 8.10223388202178E-07 , 0.000478719061900999 , 9.26265156679687E-05 , 0.000123254702406542 , 0.00132959420166595 , 0.000720768398805449 , 0.000359371548067355 , 0.000446128534928317 , 0.00031196081961777 , 0.00222427769325073 , 0.00096187863013557 , 0.00126438710920799 , 0.0357012554075263 , 2.01719202079029E-07 , 3.77219022605147E-07 , 1.60505591773055E-07 , 5.60964126258804E-07 , 7.36911524475838E-08 , 1.92186494577614E-07 , 8.94312502879555E-08 , 3.99192298307602E-07 , 8.46829142667E-05 , 3.04763143245819E-05 , 8.42517501476196E-05 , 3.41524821697647E-05 , 5.05748666240909E-06 , 1.46914370742955E-06 , 1.02356651151043E-05 , 1.26713753152262E-05 , 2.37916794878371E-07 , 3.72364465624989E-07 , 1.77656608107081E-07 , 5.71614209294828E-07 , 8.14877942710266E-08 , 1.90029022036015E-07 , 9.18210577711452E-08 , 4.02162341978734E-07 , 8.51352622547901E-05 , 2.82758205002975E-05 , 8.55225640648401E-05 , 3.58781568554444E-05 , 4.83804098043535E-06 , 1.34853843369146E-06 , 8.98660211567752E-06 , 1.24378805700724E-05; 0.0336472331403433 , 0.0107295674060886 , 0.00840515367062084 , 0.00399369665190148 , 0.00059356829758084 , 0.000140791348853487 , 0.000172679828065698 , 8.27123191365389E-05 , 0.87542959595611 , 0.366647392158872 , 0.469602414007619 , 0.323146094422489 , 0.236374649045516 , 0.0979189783997314 , 0.130172840836958 , 0.106731051260753 , 0.78503528118324 , 0.000851198710473488 , 0.1966193605229 , 0.00033807200679005 , 0.000956168103449876 , 6.18195051750472E-06 , 0.000416982522973731 , 2.45017364577231E-06 , 0.213560351759333 , 0.0336111248878761 , 0.182834749916784 , 0.01932457512358 , 0.00614287766280164 , 0.000367928002710475 , 0.00563056033450824 , 0.000217498169815875 , 0.0003749228016644 , 0.000889330034318031 , 0.000168687360324945 , 0.000311697220266924 , 6.84441806574337E-06 , 6.44789213872492E-06 , 3.03780446479405E-06 , 2.28393856858243E-06 , 0.102955225224432 , 0.0312106555127892 , 0.0953071116932056 , 0.0218162469232895 , 0.00363500618967721 , 0.000340691724230377 , 0.00340350389789138 , 0.000245776756989365; 0.5155515201331 , 0.122917995686815 , 0.127385723839229 , 0.0507750201034862 , 0.00129044005994959 , 0.000329023200295469 , 0.000403808342091919 , 0.000173708241878736 , 0.851501063868701 , 0.353405840399586 , 0.456561635674085 , 0.312802167602428 , 0.212050675624194 , 0.0877832152964571 , 0.116833011739274 , 0.095738242392786 , 0.00309625764400626 , 0.220259122007708 , 0.00137382720942437 , 0.0193551437268323 , 2.82027227762687E-05 , 0.000142810713270384 , 1.27304714173847E-05 , 3.73627627298211E-05 , 0.0982570669978486 , 0.035701722919348 , 0.0879589427927351 , 0.0189557366070972 , 0.00340938069399046 , 0.000348723755419775 , 0.00311720250841543 , 0.000204764032135211 , 0.0032836683210606 , 0.0123899604856356 , 0.00157874332822724 , 0.00442684370670257 , 3.12906200634942E-05 , 8.6834297807729E-05 , 1.51579850764828E-05 , 3.12791527864052E-05 , 0.0994333569610107 , 0.0302573604893723 , 0.0920767095346381 , 0.0211617750485112 , 0.00347727518850485 , 0.000321518621354175 , 0.00325679101488725 , 0.000231740075188008; 0.0195473680166482 , 0.0204643561156561 , 0.00504998194163033 , 0.0056620609875833 , 0.000468151020820992 , 0.000125305642697497 , 0.000136418751865159 , 6.88216770387572E-05 , 0.683693257496717 , 0.287119169127241 , 0.366789422774735 , 0.252732519743627 , 0.184659713023525 , 0.0764982460169871 , 0.101693344061313 , 0.0833813983576192 , 0.14687212127216 , 0.000537271330191693 , 0.746228735510552 , 0.000527714468460931 , 0.000468627679560811 , 3.95169183228979E-06 , 0.000789068206508995 , 3.75049424078262E-06 , 0.153532701324773 , 0.0262527684595078 , 0.159155303665872 , 0.0151190452501232 , 0.00478136558371007 , 0.000287398417430656 , 0.00443243342201127 , 0.000170071313154161 , 0.000318561361215794 , 0.000797208038425025 , 0.000142875587046967 , 0.00027195006184641 , 5.56565794763881E-06 , 5.75647738389698E-06 , 2.47128255612429E-06 , 1.98655631153374E-06 , 0.0804521335673271 , 0.0243937130921235 , 0.0744760701217969 , 0.0170494273735557 , 0.0028403063504958 , 0.000266235064981464 , 0.00265942898731771 , 0.000192049455455692; 0.173572701568998 , 0.401160598424168 , 0.0467975203116541 , 0.101354207975406 , 0.000961140352026309 , 0.000424156046280993 , 0.000307651845979955 , 0.000177068870660109 , 0.669653942525593 , 0.288535116022545 , 0.359599583041174 , 0.250955740485424 , 0.168339484422835 , 0.0696979678787425 , 0.0927496244981666 , 0.0760086676370601 , 0.00184415629449894 , 0.00812290266616975 , 0.00216278835458577 , 0.217237143067339 , 1.8214057166482E-05 , 3.77132937279711E-05 , 1.82277176634582E-05 , 0.000122774844688322 , 0.0779493705022297 , 0.0257853240234037 , 0.0699008132116165 , 0.0180970372718705 , 0.00270612148452154 , 0.000274692162464944 , 0.00247525499311095 , 0.000165033623413087 , 0.00288034847014688 , 0.011093399130485 , 0.00135844016929848 , 0.00375641436280264 , 2.70847044644611E-05 , 7.77079467372586E-05 , 1.29516692129029E-05 , 2.65540555328454E-05 , 0.0789820065281629 , 0.0240568654342118 , 0.0731335739563403 , 0.0167990483182031 , 0.00276171089453303 , 0.000255502158129588 , 0.00258657294440434 , 0.000183970040491454; 0.0012258459956373 , 0.000294299502468084 , 0.000350614264236772 , 0.000151472266260261 , 0.0351953981305391 , 0.0114427404231491 , 0.00904630083359817 , 0.00469326476609512 , 0.515143945617217 , 0.214365552548593 , 0.277189361955216 , 0.189818265215086 , 0.609466019218234 , 0.255247198882186 , 0.334108065281228 , 0.27608327381403 , 0.00265451959259924 , 5.09038083592093E-05 , 0.00115636554936207 , 1.80904879111423E-05 , 0.783087154908379 , 1.32195030622628E-05 , 0.195764629111699 , 5.39850404503079E-06 , 0.0682676068178109 , 0.0201271998843484 , 0.0612547545054502 , 0.0115384036105639 , 0.110411907645644 , 0.000479703883982309 , 0.0904182707529323 , 0.000291114257340556 , 8.8979085130536E-05 , 5.1769024738154E-05 , 3.8622758658056E-05 , 1.92583619953476E-05 , 7.66617504390859E-06 , 1.37963514919148E-05 , 3.44421625671084E-06 , 5.01669820494476E-06 , 0.0622069656638217 , 0.0186447344587326 , 0.0575602750947693 , 0.0130773984681349 , 0.00297017701165284 , 0.000443711747305404 , 0.00277569282867582 , 0.000328401862977164; 0.00305237502134099 , 0.000780896111988045 , 0.00094409584528603 , 0.000365190495978963 , 0.537556346706939 , 0.131700492382866 , 0.137546822616194 , 0.0600532729145787 , 0.452577448423522 , 0.188189962401711 , 0.243656164885901 , 0.166745845280678 , 0.611654521281567 , 0.252770209963583 , 0.335264950591411 , 0.275212453166883 , 0.000129232009751388 , 0.000472211522166252 , 5.60462193058209E-05 , 0.000132461203285636 , 4.88656461277784E-05 , 0.207821943029148 , 2.20134960103292E-05 , 0.0152476452024084 , 0.05393395638944 , 0.0177411616664619 , 0.0482540979068485 , 0.0101650307515629 , 0.0026754038516979 , 0.00350714376892047 , 0.00243379859063607 , 0.000559981767511362 , 0.000150604370039007 , 0.000318505847406808 , 6.94863970255034E-05 , 0.000120295857113185 , 5.22513636921833E-05 , 0.000189212878176927 , 2.5415033280721E-05 , 7.03029430663086E-05 , 0.054768290758246 , 0.016424899878973 , 0.0506828694759017 , 0.0115277857471957 , 0.00272826771842325 , 0.000427858055356381 , 0.00254974111333178 , 0.000317517011890263; 0.00096815900500414 , 0.000269353195271853 , 0.000277897781643247 , 0.000128181992708408 , 0.020493568791529 , 0.0216750419801977 , 0.00527867913331512 , 0.0065783147070247 , 0.402274209968114 , 0.167403353697398 , 0.216456891826787 , 0.148231369397998 , 0.475662869160672 , 0.200041590982184 , 0.260758174469893 , 0.215926189087093 , 0.00131702209711777 , 3.77267381345961E-05 , 0.00216328483633618 , 2.02208175997805E-05 , 0.145833691966099 , 8.37223409004217E-06 , 0.74471802347755 , 8.30764811351053E-06 , 0.0532625972602427 , 0.0157171461938454 , 0.0479258504178702 , 0.00901094869078329 , 0.0729646911807913 , 0.000374486281142158 , 0.0868757329653025 , 0.000227678453264154 , 7.02833544994685E-05 , 4.34441713090117E-05 , 3.05142785861541E-05 , 1.59555140426548E-05 , 6.38972162947712E-06 , 1.23770223473623E-05 , 2.86483363146112E-06 , 4.36938086799286E-06 , 0.0485765788044188 , 0.0145599403462422 , 0.0449481449863164 , 0.0102122947371611 , 0.00231962195598032 , 0.000346648495546476 , 0.00216774051691655 , 0.000256528780851894; 0.00224736950364012 , 0.00104391027741164 , 0.000718715534947736 , 0.000382887550293643 , 0.179174839860193 , 0.424206246578393 , 0.0459328949423688 , 0.117236576662971 , 0.356008497117502 , 0.148061249103695 , 0.191666934586834 , 0.131178597681071 , 0.474464855137881 , 0.207469097922169 , 0.260074256465833 , 0.219715281486063 , 9.05664343925727E-05 , 0.00016313738588829 , 6.7015406622984E-05 , 0.000371266936187189 , 2.93287623951317E-05 , 0.00322370720865323 , 3.40503105077705E-05 , 0.20755185993636 , 0.0424255842071728 , 0.0139496141552817 , 0.0379605197741621 , 0.00800400956429272 , 0.0021036754845971 , 0.000421739482147011 , 0.00191567764425263 , 0.00326316683577528 , 0.000125568931408734 , 0.00028187761898577 , 5.75103838613105E-05 , 0.00010148370617616 , 4.56132691898053E-05 , 0.000169505584510404 , 2.17306901963122E-05 , 5.93176907391124E-05 , 0.0430838980939943 , 0.0129216406485561 , 0.0398699999074858 , 0.00906833116353017 , 0.00214682402284437 , 0.000337186855547606 , 0.00200624060460523 , 0.000249702507658463; 9.69934508875899E-05 , 2.98596716235382E-05 , 2.46637915807703E-05 , 1.17566586685638E-05 , 1.85118425163112E-06 , 4.38674620749489E-07 , 5.37869047306304E-07 , 2.59408949825586E-07 , 0.0085871955931333 , 0.00652515404980627 , 0.00471347594390058 , 0.00452240953452495 , 0.000726716532878977 , 0.000329873925113677 , 0.000405566722585956 , 0.000346065936785291 , 0.00190552475233294 , 2.50858258729297E-06 , 0.000487884401469879 , 9.74519405642546E-07 , 2.71835191358671E-06 , 1.82770218532503E-08 , 1.19493331085263E-06 , 7.0893236883952E-09 , 0.0779046263937889 , 0.000321818830078184 , 0.0640003939386448 , 0.000288518308209939 , 0.000328043074702457 , 2.66699810405191E-06 , 0.000456222686607621 , 2.29923493401223E-06 , 1.28344299140637E-06 , 2.59989278764308E-06 , 5.78516603008339E-07 , 9.23382832237257E-07 , 2.23907691139582E-08 , 1.89165642459157E-08 , 9.98728894025124E-09 , 6.78535837709274E-09 , 0.000436150914601324 , 0.000356493774085807 , 0.000454516344064306 , 0.000252492088711616 , 1.19358421724459E-05 , 2.88287224099707E-06 , 1.18811664123106E-05 , 2.07376070971269E-06; 0.00126993636763783 , 0.000302272160527252 , 0.000316365518616757 , 0.000127115621126914 , 3.56328646688002E-06 , 8.95886781738308E-07 , 1.10971370343478E-06 , 4.84075840865517E-07 , 0.0393354314030692 , 0.0187554873954252 , 0.0209937681594268 , 0.0155092304267465 , 0.000678717350215622 , 0.000308261271274232 , 0.000400488024284296 , 0.00033219073663303 , 8.57101795157608E-06 , 0.000520335208966166 , 3.7975829974447E-06 , 4.61580669664894E-05 , 8.30198255685274E-08 , 3.48111415237354E-07 , 3.74052563887591E-08 , 9.19289440916943E-08 , 0.00106016405398818 , 0.0091987274936956 , 0.00124678518517951 , 0.00164689307582661 , 1.82543484592918E-05 , 1.29677693645021E-05 , 2.11617343762247E-05 , 7.31671965130951E-06 , 9.04995398786032E-06 , 3.07945417848859E-05 , 4.32755299965738E-06 , 1.10595461239628E-05 , 8.99764477296393E-08 , 2.16066130156879E-07 , 4.32909171700922E-08 , 7.8222345436611E-08 , 0.00086491912722942 , 0.00133965154479906 , 0.00105844558281296 , 0.000988767664273565 , 1.54896687594068E-05 , 9.74899156498731E-06 , 1.78821732313779E-05 , 7.26231528247241E-06; 5.53884503383849E-05 , 5.09189144496954E-05 , 1.43465039906998E-05 , 1.46448090094092E-05 , 1.31740719129752E-06 , 3.46791184005326E-07 , 3.83197748477185E-07 , 1.92829886363331E-07 , 0.00310938594248705 , 0.00474716141119162 , 0.00182686368672718 , 0.00274992724323519 , 0.00051052760369893 , 0.000228542091674764 , 0.000283451070041431 , 0.000240770369666069 , 0.000385783802978347 , 1.52897220153406E-06 , 0.00177814461614984 , 1.34479239906931E-06 , 1.34876782054045E-06 , 1.12424559490809E-08 , 1.98099449686465E-06 , 9.58058900480885E-09 , 0.00508077246714513 , 0.000122008489868671 , 0.0736701448396232 , 0.000186952376225559 , 6.12382990021274E-05 , 1.14272921163363E-06 , 0.000266635248493514 , 1.49978620788334E-06 , 9.40849784311139E-07 , 2.14386774823496E-06 , 4.22720345208479E-07 , 7.38531173169666E-07 , 1.60984339060325E-08 , 1.55116115094685E-08 , 7.16963373357297E-09 , 5.40346264115808E-09 , 0.000277683586968662 , 0.000186469106087542 , 0.000278116512554635 , 0.000126348774319269 , 8.28467654307822E-06 , 1.57605750589878E-06 , 8.05518015839078E-06 , 1.09541777618565E-06; 0.000449730591470072 , 0.000956268922537522 , 0.000121006110698409 , 0.000245049594871364 , 2.59380869604386E-06 , 1.07895644936847E-06 , 8.233360312601E-07 , 4.65222468136972E-07 , 0.00711280589538917 , 0.0319164752764924 , 0.00517668924052605 , 0.0160928164102903 , 0.000484466101596077 , 0.000242540030930763 , 0.000282607692978523 , 0.000248065287315002 , 5.12842191460873E-06 , 2.05934310110204E-05 , 5.46540864447787E-06 , 0.000512040979968106 , 5.23118666523895E-08 , 9.75164391635126E-08 , 4.73706160029976E-08 , 2.92667607570804E-07 , 0.000397829973158021 , 0.00030486807012641 , 0.000854967208303734 , 0.00892316141758007 , 9.5743181115195E-06 , 2.38312521609922E-06 , 1.39156384595357E-05 , 1.084742213517E-05 , 7.6481881709307E-06 , 2.73126850915849E-05 , 3.59934870905918E-06 , 9.29832170575644E-06 , 7.43138363753935E-08 , 1.91470373606301E-07 , 3.54134515241306E-08 , 6.57744672286494E-08 , 0.000594621519755527 , 0.000899054446445437 , 0.000694593215618967 , 0.000590243702670918 , 1.11768936737936E-05 , 6.56611435248703E-06 , 1.24518115183537E-05 , 4.37531370094579E-06; 3.87353376712184E-06 , 9.27474014458078E-07 , 1.10677365160449E-06 , 4.81734043783558E-07 , 0.000101350377024981 , 3.17756711530652E-05 , 2.64268143702064E-05 , 1.38162443554962E-05 , 0.00161601559029465 , 0.000744749132674124 , 0.000884919707591947 , 0.000633138270415506 , 0.00712434894264764 , 0.00612076925618822 , 0.00390401565975615 , 0.00493885474408871 , 7.55084350905763E-06 , 1.57476678523213E-07 , 3.31497636916538E-06 , 5.54194077741288E-08 , 0.00189978247778298 , 3.89112703848939E-08 , 0.000485350857954096 , 1.556018933038E-08 , 0.00104082698918203 , 6.68319685455167E-05 , 0.00137375440554631 , 4.3115664784229E-05 , 0.0769229739543577 , 4.29660563823353E-06 , 0.0627580184260481 , 4.37078139420801E-06 , 2.66005818543726E-07 , 1.59481380663117E-07 , 1.15736159314473E-07 , 5.96591079539049E-08 , 2.48939703156178E-08 , 4.02806713624788E-08 , 1.1207759399064E-08 , 1.48288212304194E-08 , 0.000183783985655431 , 6.42450697859718E-05 , 0.000172374227690435 , 4.57801642293602E-05 , 1.04211439481317E-05 , 4.91877768327462E-06 , 1.04991364427367E-05 , 3.73589667168074E-06; 8.35283301674931E-06 , 2.10821171502824E-06 , 2.57243008862076E-06 , 1.00805774835521E-06 , 0.00132448523217769 , 0.000323643852616134 , 0.000341330599142677 , 0.000150397581890292 , 0.00149976336010861 , 0.000691825846955342 , 0.000873180585800001 , 0.000605389792285821 , 0.0361656516098194 , 0.0177201861809817 , 0.0197995640432898 , 0.0177767511412577 , 3.59524779081545E-07 , 1.17661962219951E-06 , 1.55823064331596E-07 , 3.33599577595738E-07 , 1.34013016616371E-07 , 0.00048944357625111 , 6.02194577586767E-08 , 3.59513532057173E-05 , 0.000165070752366726 , 8.94413128147609E-05 , 0.000156904976403731 , 5.4363566295177E-05 , 1.80007798623092E-05 , 0.00778695849473116 , 2.08685397778805E-05 , 0.000726533501322546 , 4.16046250975397E-07 , 8.13588193844741E-07 , 1.91503976036043E-07 , 3.08633999367022E-07 , 1.42671262417309E-07 , 4.70285424612079E-07 , 6.89982331936922E-08 , 1.75601675272975E-07 , 0.000161731964748064 , 7.65084705097328E-05 , 0.00015767035064149 , 5.82299801828307E-05 , 1.54107571042294E-05 , 1.83471131734898E-05 , 1.83119996316389E-05 , 1.47725924499002E-05; 2.74250626734609E-06 , 7.46625114681408E-07 , 7.85563158554638E-07 , 3.60774496403973E-07 , 5.79841662097179E-05 , 5.39236919353182E-05 , 1.49890379537497E-05 , 1.70334747310663E-05 , 0.00112171290797878 , 0.000509814932625778 , 0.000610656743796845 , 0.00043506037749083 , 0.00212054170771693 , 0.00458337780315554 , 0.00116511883227696 , 0.0029785683233512 , 3.78332020965526E-06 , 1.06959486964099E-07 , 5.4345439779397E-06 , 5.40434783068753E-08 , 0.000382753318961919 , 2.37717492393992E-08 , 0.00177430179604019 , 2.11908667496899E-08 , 0.00027490522669162 , 4.4508557997189E-05 , 0.000821897742851607 , 2.94354425292121E-05 , 0.0047389295160253 , 1.48981012593322E-06 , 0.0729392018542258 , 2.85609057598089E-06 , 1.92947618219366E-07 , 1.20466621790548E-07 , 8.38767995101451E-08 , 4.44399540192071E-08 , 1.83219944619842E-08 , 3.32406425092993E-08 , 8.22755761773392E-09 , 1.18436040476282E-08 , 0.000132666049696346 , 4.35097166494993E-05 , 0.000123639859669616 , 3.06411883408319E-05 , 7.05813810708467E-06 , 2.57748662686774E-06 , 6.89779327391081E-06 , 1.83671826191045E-06; 6.00982641643773E-06 , 2.63420244928327E-06 , 1.90493627885301E-06 , 9.95201948610991E-07 , 0.000464370775746314 , 0.00101120065213434 , 0.000119185178756097 , 0.000283625359885679 , 0.00103721020220571 , 0.000538694139763855 , 0.000598508525327631 , 0.000443946814784459 , 0.00336988470969993 , 0.0326092975188312 , 0.00187339210282051 , 0.0185651723044689 , 2.45825165706539E-07 , 4.27443796043797E-07 , 1.72509272440085E-07 , 8.91008728142164E-07 , 8.03307270031213E-08 , 7.88696555922057E-06 , 8.56181858884333E-08 , 0.000488764141300781 , 0.000115458026861463 , 4.28670136586295E-05 , 0.000115852450649543 , 5.57359702128117E-05 , 7.11899932778268E-06 , 7.87888814184394E-06 , 1.43339137764013E-05 , 0.0077845939699624 , 3.33321252409461E-07 , 7.06251921078032E-07 , 1.52514639687068E-07 , 2.55579538780471E-07 , 1.20000247235244E-07 , 4.17057461568037E-07 , 5.70343467741092E-08 , 1.46693650911895E-07 , 0.000121352559641954 , 5.39625408311332E-05 , 0.000116495233625859 , 3.85518317472198E-05 , 1.07935641022601E-05 , 1.22465466236509E-05 , 1.21069646399223E-05 , 8.34259879517532E-06; 0.0339318595561941 , 0.00640085426122462 , 0.0136857883407691 , 0.00390592356799936 , 0.000571917125076834 , 0.000124999718303601 , 0.000179114607079889 , 7.90726434928416E-05 , 0.824077928522187 , 0.341210468846805 , 0.446136859934462 , 0.303799989898364 , 0.221886561813986 , 0.091802846934123 , 0.122316557839375 , 0.100176859357079 , 0.000325480124387771 , 0.00094229395119159 , 0.000130433312410599 , 0.000262242561778784 , 5.30436908906196E-06 , 6.80549511011521E-06 , 2.19441073863738E-06 , 1.91848135603682E-06 , 0.0956155757274256 , 0.031723924201573 , 0.085560665784986 , 0.0180973064898275 , 0.00334714800842495 , 0.000346625266520961 , 0.00305918520488838 , 0.000203832395509255 , 0.76104758116266 , 0.00083350087283415 , 0.234559957384286 , 0.000400934669081204 , 0.000988014742507192 , 6.05336218437597E-06 , 0.000499769528577724 , 2.90230465099624E-06 , 0.203616992063743 , 0.0292991333544623 , 0.181423062413002 , 0.0206105765393412 , 0.00589386899019432 , 0.000319791611564188 , 0.00552960019144281 , 0.000231666745841673; 0.50859732453675 , 0.0948965580914318 , 0.159660533354327 , 0.0498885034637094 , 0.00127884899087321 , 0.000304985004361541 , 0.000426162449447847 , 0.000171726518327705 , 0.842855079290387 , 0.348829317158067 , 0.453178125973856 , 0.309604028149384 , 0.209914887777588 , 0.0868976857310307 , 0.115657846415866 , 0.0947738606562246 , 0.00314571153240622 , 0.0129624269120572 , 0.00128887470658664 , 0.00365147736946338 , 2.85062211700832E-05 , 9.08091128274629E-05 , 1.20740696761562E-05 , 2.58160175962621E-05 , 0.0972794314043817 , 0.0323528088789334 , 0.087071127018753 , 0.0184650478156437 , 0.00337526782241454 , 0.000344382882384827 , 0.00308590675869344 , 0.000202359193802944 , 0.00320059544191742 , 0.214879631827469 , 0.001650401815138 , 0.0242785686462359 , 3.06454425635291E-05 , 0.000135448816709302 , 1.56657297911112E-05 , 4.4831135592509E-05 , 0.0984247282435565 , 0.0328908889895561 , 0.0911532990478232 , 0.0213246447879408 , 0.00344213893814078 , 0.00031908575236166 , 0.0032239686745553 , 0.000229800220973767; 0.0198747507235949 , 0.00386276319121816 , 0.020782931140609 , 0.00454354872609164 , 0.000428930432431167 , 9.38898142723734E-05 , 0.0001458689625965 , 6.14198330511569E-05 , 0.60949414612374 , 0.25238563459558 , 0.330561609919251 , 0.224904394307892 , 0.164145019434893 , 0.0679131277252816 , 0.09048756808874 , 0.0741085024645985 , 0.000264795377476844 , 0.000801427435429305 , 0.00010513392309661 , 0.000216222608744175 , 4.12204493890953E-06 , 5.76660052367819E-06 , 1.69847788131914E-06 , 1.57737923021681E-06 , 0.0707518164240659 , 0.0234777662647942 , 0.0633116479025872 , 0.0133917635598215 , 0.00247661990500124 , 0.000256489244868183 , 0.00226355943228943 , 0.000150817202881937 , 0.165721473675683 , 0.000531890345977002 , 0.70586674975671 , 0.000512866603278879 , 0.000531146561562277 , 3.90004545600584E-06 , 0.000750109498788135 , 3.6525897898207E-06 , 0.140539022153671 , 0.0216723100921087 , 0.146917602649256 , 0.0152623882561055 , 0.00434907135219372 , 0.000236556590159736 , 0.0041106129841158 , 0.000171488034746053; 0.175510939356774 , 0.0356580949901155 , 0.402646412942735 , 0.0784478438897154 , 0.000922977477127842 , 0.000224643828108061 , 0.000466788631478153 , 0.000155973893377693 , 0.628075479138148 , 0.260342417861434 , 0.347682474128926 , 0.234261808688935 , 0.157763998988021 , 0.0653089833338212 , 0.0869322260027112 , 0.0712317776558182 , 0.00266533771874815 , 0.01117156958128 , 0.00106185849163906 , 0.00294763818083047 , 2.38447518284776E-05 , 7.82247003120134E-05 , 9.88337149037726E-06 , 2.08518783506711E-05 , 0.0731617323237563 , 0.0243543093449487 , 0.0654778080966427 , 0.0138753941168817 , 0.00253806165561392 , 0.000259102617633567 , 0.00232043753019974 , 0.000152072330725596 , 0.00199363035522611 , 0.00882896337802315 , 0.00211762751999048 , 0.211936501440575 , 2.03971350562368E-05 , 3.78415017671539E-05 , 1.84095913088889E-05 , 0.000116798217631641 , 0.0739353622798197 , 0.0224186254866145 , 0.0685507795318244 , 0.0188950884557906 , 0.00258655458579944 , 0.000238111259849079 , 0.00242325036946813 , 0.000174748425131502; 0.00118779758039185 , 0.000257709436191285 , 0.000372116507827776 , 0.000145361682876156 , 0.0355393851964243 , 0.00684971215154994 , 0.0146870841499474 , 0.00459855262287242 , 0.483487156336185 , 0.200913764600587 , 0.26044631295353 , 0.17812635584435 , 0.574377354836576 , 0.23634325037917 , 0.319332044259755 , 0.259716828180984 , 6.59519164681628E-05 , 5.20278335862997E-05 , 2.71549264867629E-05 , 1.57477956265739E-05 , 6.35397734924711E-06 , 1.46347279575838E-05 , 2.59245175577896E-06 , 4.22927025573072E-06 , 0.0574749602750045 , 0.0188996845817215 , 0.0514168099475853 , 0.0108219257143875 , 0.00273329430002832 , 0.000452933193990142 , 0.00248699977936132 , 0.000272535489992865 , 0.002752693251147 , 4.91837841072469E-05 , 0.00138756511546965 , 2.10946149952695E-05 , 0.759000325646985 , 1.29470071200313E-05 , 0.233527992574098 , 6.39935975952485E-06 , 0.0651067861210421 , 0.0174932185039619 , 0.0603507208465966 , 0.0122817011209427 , 0.105319908443498 , 0.000416386631721113 , 0.0903521563066535 , 0.000310345646454298; 0.00302506064962213 , 0.000719694486595234 , 0.00100226549766304 , 0.000360907249102618 , 0.530268269985307 , 0.101773055947869 , 0.171984608884428 , 0.0590053840736832 , 0.44787015162125 , 0.186229113388197 , 0.2411257919483 , 0.165011268113178 , 0.605216465355105 , 0.248994454142983 , 0.333153803966764 , 0.272287288089389 , 0.000129647895203283 , 0.000331483482327944 , 5.39480697794724E-05 , 9.95570680571639E-05 , 4.96081529519032E-05 , 0.000198154188451865 , 2.06864964263095E-05 , 5.80793812272696E-05 , 0.0533732311482292 , 0.0175545057119591 , 0.0477521211318395 , 0.0100582562824122 , 0.00264776802595583 , 0.000459385539205984 , 0.00240844791455343 , 0.000277066890827764 , 0.000148067573560205 , 0.000448851297244183 , 7.06787757314696E-05 , 0.000158244334346822 , 5.09626318872666E-05 , 0.203166438481632 , 2.65141423174563E-05 , 0.0193968694248961 , 0.0541984293495739 , 0.0162561498856393 , 0.0501557701094232 , 0.0114090663430967 , 0.00269977643448374 , 0.00338216700581497 , 0.00252328762298713 , 0.000666354349841727; 0.000892977002656243 , 0.000194330884634241 , 0.000309475693103812 , 0.000114339640707483 , 0.0208508547094051 , 0.0040251938758092 , 0.0221215656078005 , 0.00529302816778245 , 0.357500192898638 , 0.148560060204847 , 0.192582932858992 , 0.131711626831885 , 0.424521891386934 , 0.174681579208 , 0.236666633993863 , 0.192222511900795 , 4.94854706814498E-05 , 4.14796356946721E-05 , 2.03472284852134E-05 , 1.23528165315633E-05 , 5.07398155106949E-06 , 1.24504984748438E-05 , 2.05279225475506E-06 , 3.47823484027678E-06 , 0.0424979396304275 , 0.0139750509943059 , 0.0380185006063331 , 0.00800205983439434 , 0.00202125071099142 , 0.000335033723519145 , 0.00183911594682518 , 0.0002015664386529 , 0.00149331769061049 , 3.52468459202256E-05 , 0.002060910479339 , 2.06053068713336E-05 , 0.164547608824097 , 8.2883496401134E-06 , 0.704411441882431 , 8.08349247629096E-06 , 0.0481119504527719 , 0.0129347725330184 , 0.0446795987319249 , 0.0090817468427166 , 0.067827270344648 , 0.000307821314793605 , 0.0794943631332407 , 0.000229708858190853; 0.00216322502974664 , 0.00053004349594677 , 0.00113180384433435 , 0.000334505116993071 , 0.180994003245505 , 0.0348006250542469 , 0.427117884938699 , 0.0907810946950124 , 0.332887758130967 , 0.138418657261856 , 0.179242502211064 , 0.122655055653255 , 0.444126892223564 , 0.182725833367093 , 0.255351434169588 , 0.20427342240001 , 0.000104022689946178 , 0.000281783873545516 , 4.25977989247248E-05 , 7.98003518677192E-05 , 4.18360857271434E-05 , 0.00017079951635069 , 1.69155879536809E-05 , 4.65392109101165E-05 , 0.039672267215875 , 0.0130490573187997 , 0.0354939807939634 , 0.00747609832531373 , 0.00196878353004079 , 0.000342114207548379 , 0.00179069362250923 , 0.000205844199989243 , 0.000103376886249666 , 0.000159790409977174 , 7.14632353595814E-05 , 0.000355583415722644 , 3.19501583123839E-05 , 0.0039885673701744 , 3.34361206897792E-05 , 0.202756868483241 , 0.0402834335519573 , 0.0120779466312261 , 0.0372805003415894 , 0.00848641805024485 , 0.00200604656089544 , 0.000385924819796132 , 0.00187616347482623 , 0.00318873366185845; 9.3998054590311E-05 , 1.79835042429137E-05 , 3.68934002624149E-05 , 1.09895099750052E-05 , 1.66930802192937E-06 , 3.64678913910069E-07 , 5.21577915545639E-07 , 2.31402443524343E-07 , 0.00679965881669148 , 0.00288354638874196 , 0.00601547507954012 , 0.00332435825479335 , 0.000641496066046195 , 0.000268966840538738 , 0.000372547175392689 , 0.000299306027677057 , 1.04550459667979E-06 , 2.623401423916E-06 , 4.25726355761953E-07 , 7.41323674377609E-07 , 1.67681605013666E-08 , 1.89899564352511E-08 , 7.01638636874684E-09 , 5.43276049976089E-09 , 0.000402515306812162 , 0.000307600843257217 , 0.000398572898206449 , 0.00017384052396153 , 1.08628186080427E-05 , 2.52374496280304E-06 , 1.05758032219016E-05 , 1.45373001276506E-06 , 0.00184676068054269 , 2.35681071585166E-06 , 0.000577110324407486 , 1.10846415406383E-06 , 2.70971799948E-06 , 1.7152019459332E-08 , 1.35763575102591E-06 , 8.04445380451506E-09 , 0.0602215300188498 , 0.00023151356616634 , 0.051786913793706 , 0.000239980481999949 , 0.00019578311834689 , 1.95494804744004E-06 , 0.000287455459035107 , 1.94920938789626E-06; 0.00125286970831477 , 0.000235730768827087 , 0.000392597271977253 , 0.000124889400662588 , 3.52617449146557E-06 , 8.36351208166438E-07 , 1.16012558265486E-06 , 4.77906591803331E-07 , 0.0383331149108664 , 0.0158095023127173 , 0.0236315403516639 , 0.0150742379670439 , 0.000669769967087748 , 0.000300551124054609 , 0.000398971001941651 , 0.000327361516780032 , 8.67035474687895E-06 , 3.21343371825682E-05 , 3.58684140177119E-06 , 9.12338788811878E-06 , 8.3556925165235E-08 , 2.2534269940986E-07 , 3.57537408821307E-08 , 6.45642520082114E-08 , 0.00107326008538982 , 0.00146465399714044 , 0.00122029411533658 , 0.000857878706920012 , 1.83008322897865E-05 , 1.06647926667642E-05 , 2.08720887806505E-05 , 6.31144446333255E-06 , 8.82595422301537E-06 , 0.00050765206163978 , 4.48576986516132E-06 , 5.7855877349804E-05 , 8.80481036920576E-08 , 3.30580339087154E-07 , 4.43176286758671E-08 , 1.10201365654734E-07 , 0.000824578343521837 , 0.00879166458487469 , 0.0010428540374323 , 0.00192367867663707 , 1.50194429331518E-05 , 1.15291062345934E-05 , 1.75702884511631E-05 , 8.10544199690618E-06; 5.40613036872474E-05 , 1.0528273724014E-05 , 5.15628040184736E-05 , 1.16410734706789E-05 , 1.15975003707403E-06 , 2.53602593822488E-07 , 3.90394223860646E-07 , 1.65592107397617E-07 , 0.00245532982493709 , 0.00111373576486098 , 0.00397661985251696 , 0.00184137415810467 , 0.000438734464027504 , 0.000182926794461435 , 0.000252445339744315 , 0.000203181126492709 , 7.50776162829881E-07 , 2.09588458435909E-06 , 3.01210937837545E-07 , 5.71294115237142E-07 , 1.16445256307074E-08 , 1.51003376863687E-08 , 4.83293104057674E-09 , 4.17179814216427E-09 , 0.000242837165824036 , 0.000155161582027987 , 0.000231771785348797 , 8.36033498917799E-05 , 7.16071341433515E-06 , 1.33779652705358E-06 , 6.79915552799388E-06 , 7.43965649347731E-07 , 0.000427698194931692 , 1.45320422034788E-06 , 0.00168129976861156 , 1.29687345900456E-06 , 1.44937679288256E-06 , 1.06530635736143E-08 , 1.86690955270322E-06 , 9.25319866234482E-09 , 0.00330216860042654 , 8.812425245954E-05 , 0.0574057859706405 , 0.000142844322699559 , 3.47170296407132E-05 , 8.44677807152936E-07 , 0.00016244357286442 , 1.18000199223394E-06; 0.000451622306020353 , 9.1614983804298E-05 , 0.000961473186059782 , 0.000190186652673708 , 2.47135606797892E-06 , 5.96720918314371E-07 , 1.19280846864393E-06 , 4.10021291179069E-07 , 0.00669478309683522 , 0.0038042550874333 , 0.0313248891508941 , 0.0122713080073508 , 0.000452454246585925 , 0.000199587764289121 , 0.000286720392715882 , 0.000226305342092394 , 7.04110276086086E-06 , 2.74258552293939E-05 , 2.83170377757941E-06 , 7.28837289313831E-06 , 6.58837683430782E-08 , 1.92162454509248E-07 , 2.75909854968536E-08 , 5.15904134399787E-08 , 0.0006712986571313 , 0.000898047551181069 , 0.000727584862996943 , 0.000459035947517998 , 1.20213782066396E-05 , 6.56916854545485E-06 , 1.31867348045646E-05 , 3.41627547191547E-06 , 5.42885914500898E-06 , 2.22324001081558E-05 , 5.34656903346417E-06 , 0.000499576933507366 , 5.65303155925487E-08 , 9.72399579336135E-08 , 4.74853516750581E-08 , 2.78711230989583E-07 , 0.000319409156527159 , 0.000259124174561588 , 0.000651344564198399 , 0.00856163066085608 , 8.17799669206747E-06 , 2.01316767637959E-06 , 1.10723345755783E-05 , 9.77332756503684E-06; 3.49514275873412E-06 , 7.58115122593967E-07 , 1.09088615253007E-06 , 4.29062968542873E-07 , 9.83807577904564E-05 , 1.91713901446654E-05 , 3.9548264971155E-05 , 1.29342560497424E-05 , 0.0014167384539374 , 0.000598537010358312 , 0.000809942761460216 , 0.000542132855204861 , 0.00557646457370553 , 0.00229349897130052 , 0.00564480248192191 , 0.00356251373243692 , 1.88554421849209E-07 , 1.50128071519707E-07 , 7.78211241307398E-08 , 4.57452594956791E-08 , 1.95824974693698E-08 , 4.07071292761573E-08 , 8.07394543180516E-09 , 1.19314743847482E-08 , 0.000163221147776928 , 6.0037702665827E-05 , 0.000147631851999269 , 3.47182298834525E-05 , 9.42685977060043E-06 , 4.27366359750963E-06 , 9.1353815946888E-06 , 2.56594963157437E-06 , 7.5519627577562E-06 , 1.42941302626051E-07 , 3.77121482495695E-06 , 6.06630143524521E-08 , 0.00184099672291743 , 3.65603591524688E-08 , 0.000574237576652211 , 1.768712742906E-08 , 0.000667877161819987 , 5.3629866418495E-05 , 0.000907181549242448 , 4.08989973083936E-05 , 0.0595618197702353 , 3.07495763340233E-06 , 0.0509384594981656 , 3.61008833394998E-06; 8.26583766800914E-06 , 1.95717895206879E-06 , 2.70443742864711E-06 , 9.94869938933982E-07 , 0.00130656927310694 , 0.000252537704291624 , 0.000422711396517923 , 0.00014775478265287 , 0.00147872151068178 , 0.000672915101025785 , 0.0008701976838077 , 0.00059588312512284 , 0.03515955529251 , 0.0144450801677798 , 0.02284158471546 , 0.0172344459855883 , 3.59539924809452E-07 , 8.43742387544258E-07 , 1.50388983167805E-07 , 2.55358499331015E-07 , 1.35499965741683E-07 , 4.91253561498363E-07 , 5.69260425765118E-08 , 1.45073122651031E-07 , 0.000163717008130633 , 8.27286293528524E-05 , 0.000154713756186328 , 5.08149328510196E-05 , 1.82145036356842E-05 , 2.02324467251281E-05 , 2.0429065895342E-05 , 1.28033066628862E-05 , 4.08732524656555E-07 , 1.11996603636581E-06 , 1.9376639674053E-07 , 3.97972962317829E-07 , 1.39192372129134E-07 , 0.000478497374613818 , 7.14228007446373E-08 , 4.57337478538106E-05 , 0.000159098485704441 , 8.03482279704409E-05 , 0.000155693023104116 , 6.02150506557271E-05 , 1.474145633445E-05 , 0.00755451418146874 , 1.80459913640234E-05 , 0.00090995677968185; 2.42319038679659E-06 , 5.26695895282685E-07 , 8.28797066366293E-07 , 3.09042458975298E-07 , 5.66501108369984E-05 , 1.09616224137526E-05 , 5.48870198804978E-05 , 1.35667572618387E-05 , 0.000960598837611652 , 0.000403238682509175 , 0.000543768444311852 , 0.000364599629699754 , 0.00164405894434792 , 0.000678132904375523 , 0.00379611361169407 , 0.00192407687900794 , 1.32143769135076E-07 , 1.10777975103222E-07 , 5.44088354644901E-08 , 3.3147628695661E-08 , 1.40625403263884E-08 , 3.25275557472523E-08 , 5.7278729863388E-09 , 9.17381727229077E-09 , 0.000113236154489827 , 3.97028130641855E-05 , 0.000101864504651766 , 2.27337782208158E-05 , 6.07073503149405E-06 , 2.15391842379639E-06 , 5.72002841348731E-06 , 1.20688269514744E-06 , 4.07015013208957E-06 , 9.57906069193707E-08 , 5.13234211049555E-06 , 5.38561279945343E-08 , 0.000424464551976703 , 2.25965385509858E-08 , 0.00167763909508081 , 2.04508292811907E-08 , 0.000189551038741464 , 3.51224986432502E-05 , 0.00052973756195854 , 2.71767249044805E-05 , 0.00305127710692287 , 1.08232762796048E-06 , 0.0569144848002852 , 2.15551347502084E-06; 5.73598636401286E-06 , 1.39402257435297E-06 , 2.8663543008532E-06 , 8.69655612934011E-07 , 0.000465730082832921 , 8.96429976496284E-05 , 0.00101992908533335 , 0.000220150240432107 , 0.000965800003550739 , 0.000432129487928933 , 0.000613482152944803 , 0.000401090933020956 , 0.0030683313479238 , 0.00128220676049422 , 0.031972077605507 , 0.0137877071505309 , 2.75231987649786E-07 , 7.02753927477491E-07 , 1.13272953003977E-07 , 2.00466339026667E-07 , 1.0949462357537E-07 , 4.19020719769408E-07 , 4.46064465352956E-08 , 1.14939409671946E-07 , 0.000114311015662835 , 5.39981432847053E-05 , 0.000106015603172683 , 3.08945387182495E-05 , 1.15570183901333E-05 , 1.2235506223404E-05 , 1.21895536101344E-05 , 6.36820783455221E-06 , 2.75886388934745E-07 , 4.15532590224036E-07 , 1.83490498224432E-07 , 8.54614836516755E-07 , 8.57648155357704E-08 , 9.75191958240196E-06 , 8.39770272224843E-08 , 0.000477474644758742 , 0.000107454312882236 , 3.66765057080816E-05 , 0.000108301225217166 , 5.29031400908169E-05 , 6.21669715402727E-06 , 8.75510914410469E-06 , 1.13292171655159E-05 , 0.00755219426251572 ");
            while (ii != 4)
            {
                double re = 0.0;
                for (int j = 1; j <= R.ColumnCount; j++)
                {
                    re += R[ii, j].Re;
                }
                m[ii] = re;
                ii++;
            }
            var part1 = this.Q_10 *
                Matrix.CastingToMatrix(Matrix.reverse((-this.Q_00).CastingToDouble()));
            var system1 = this.Q_1 + part1 * this.Q_01 + R * this.Q_0;
            var part2 = R * Matrix.CastingToMatrix(Matrix.reverse((Matrix.Identity(R.ColumnCount) - R).CastingToDouble()));
            var system2 = part1 * Matrix.Ones(part1.ColumnCount, 1) + part2 * Matrix.Ones(part2.ColumnCount, 1);
            var system22 = Matrix.Ones(system2.RowCount, 1) + system2;

            for (int i = 1; i <= system1.RowCount; i++)
            {
                system1[i, system1.ColumnCount] = system22[i, 1];
            }

            var x = new Matrix(1, system1.RowCount);
            x[1, system1.RowCount] = new Complex(1);
            var p_i = new Matrix[2000];
            var vector = Matrix.Solve(system1.Transpose(), x.Transpose());
            vector = vector.Transpose();
            var r = Matrix.reverse(system1.CastingToDouble());
            p_i[1] = x * Matrix.CastingToMatrix(r);
            p_i[0] = p_i[1] * part1;
          
            
           
            var matrixR = R;
            p_i[2] = p_i[1] * R;
            int k = 3;
            while (p_i[k - 1].MaxNorm() > 0.000001)
            {

                matrixR =matrixR*R;
                p_i[k] = p_i[1] * matrixR;
                k++;
            }
            obj.L = new Complex();
            for (int i = 1; i < k; i++)
            {
                obj.L = obj.L + ((i * p_i[i]) * Matrix.Ones(p_i[i].ColumnCount, 1))[1, 1];
            }
            var Lambda = obj.lambda;
            var rev = (Matrix.CastingToMatrix(Matrix.reverse((Matrix.Identity(R.RowCount) - R).CastingToDouble())));
            var part = p_i[1] * rev*rev;
            var newL = part * Matrix.Ones(part.ColumnCount, 1);
            double res = 0.0;
            
            int t = 1;
            double[] mas = new double[25];
            for (int i = 1; i <= p_i[0].ColumnCount; i++)
            {

                mas[0] += p_i[0][1, i].Re;
            }
            double sum = mas[0];
            while (t != k)
            {
                res = 0.0;
                for (int j = 1; j <= p_i[1].ColumnCount; j++)
                {
                    res += p_i[t][1, j].Re;
                }
                mas[t] = res;
                sum += res;
                t++;
                // res0 += p_i[0][1,i].Re;
            }
            var lll = 0;
            return system1;
        }
        public Matrix SearchForStationaryDistribution_Algoritm_1(ParticularSystem obj,StreamWriter sw)
        {
            var G = Matrix.Identity(this.Q_0.RowCount);

            var reve = Matrix.CastingToMatrix(Matrix.reverse((-this.Q_1).CastingToDouble()));
            var IterationG = reve*( this.Q_0+this.Q_2*(G * G) ) ;
            int l = 0;

            while ((IterationG - G).MaxNorm() > 0.000001)
            {
                //Console.WriteLine((IterationR - R).MaxNorm());
                G = IterationG;
                IterationG = reve * (this.Q_0 + this.Q_2 * (G * G));
                l++;
                int tt = 1;
                double[] ma = new double[48];
                //while (tt != 4)
                //{
                //    double rr = 0.0;
                //    for (int j = 1; j <= IterationG.ColumnCount; j++)
                //    {
                //        rr += G[tt, j].Re;
                //    }
                //    ma[tt] = rr;
                //    tt++;
                //    // res0 += p_i[0][1,i].Re;
                //}
            }
            this.G = G;
            G_0 = -Matrix.CastingToMatrix(Matrix.reverse((Q_1 + Q_2 * G).CastingToDouble())) * Q_10;
            var FList = new Matrix[5000];
            
            var a = GiveMatrixWithLine(0, 1);
            var F = Matrix.Identity(a.RowCount);
            var aaaaa= -GiveMatrixWithLine(1, 1);
            var aa = Matrix.CastingToMatrix(Matrix.reverse(aaaaa.CastingToDouble()));
            var IterationF = F*a*aa;
            int ll = 2;
            FList[0] =new Matrix(F);
            FList[1] =  new Matrix(IterationF);
            do
           {
                

                    F = IterationF;
                var aaa = GiveMatrixWithLine(ll - 1, ll);
                var aaaa = Matrix.CastingToMatrix(Matrix.reverse((-GiveMatrixWithLine(l, l)).CastingToDouble()));
                    IterationF = FList[ll - 1] * aaa
                        * aaaa;
                    FList[ll] = new Matrix(IterationF);
                    ll++;
                    int tt = 1;
                    double[] ma = new double[48];
                    //while (tt != 47)
                    //{
                    //    double rr = 0.0;
                    //    for (int j = 1; j <= IterationF.ColumnCount; j++)
                    //    {
                    //        rr += F[tt, j].Re;
                    //    }
                    //    ma[tt] = rr;
                    //    tt++;
                    //    // res0 += p_i[0][1,i].Re;
                    //}
                
            }
            while ((IterationF - F).MaxNorm() > 0.00001);

            var system1 = -GiveMatrixWithLine(0,0);
            Matrix part2 = new Matrix(FList[1].RowCount,FList[1].ColumnCount);
            for(int i = 1; i <ll ; i++)
            {
                part2 += FList[i];
            }
            var system2 = part2 * Matrix.Ones(part2.ColumnCount, 1);
            var system22 = Matrix.Ones(system2.RowCount, 1) + system2;

            for (int i = 1; i <= system1.RowCount; i++)
            {
                system1[i, system1.ColumnCount] = system22[i, 1];
            }

            var x = new Matrix(1, system1.RowCount);
            x[1, system1.RowCount] = new Complex(1);
            var p_i = new Matrix[2000];
            var vector = Matrix.Solve(system1.Transpose(), x.Transpose());
            vector = vector.Transpose();
            var r = Matrix.reverse(system1.CastingToDouble());
            p_i[0] = x * Matrix.CastingToMatrix(r);
            int k = 1;
            while (k<ll)
            {
                p_i[k] = p_i[0] * FList[k];
                k++;
            }
            double[] mas = new double[1500];
            for (int i = 1; i <= p_i[0].ColumnCount; i++)
            {

                mas[0] += p_i[0][1, i].Re;
            }
            double sum = mas[0];
            int t = 1;
            //while (t != 814)
            //{
            //    var res = 0.0;
            //    for (int j = 1; j <= p_i[1].ColumnCount; j++)
            //    {
            //        res += p_i[t][1, j].Re;
            //    }
            //    mas[t] = res;
            //    sum += res;
            //    t++;
            //    // res0 += p_i[0][1,i].Re;
            //}
            obj.L = new Complex();
            List<Complex> lc = new List<Complex>();
            lc.Add(((1 * p_i[1]) * Matrix.Ones(p_i[1].ColumnCount, 1))[1, 1]);
            for (int i = 1; i < k-1; i++)
            {
                lc.Add( lc[i-1]+(((i+1) * p_i[i+1]) * Matrix.Ones(p_i[i].ColumnCount, 1))[1, 1]);
            }
           
            var Lambda = obj.lambda;
            sw.Write($"{{{Lambda.ToString().Replace(",", ".")}, {lc[k - 2].ToString().Replace(",",".")}}} ,");
            return new Matrix();
        }
        public Matrix GiveMatrixWithLine(int i,int l)
        {
            if(i==0 && l == 0)
            {
                return Q_00 + Q_01 * G_0;
            }
            if (i == 0 && l == 1)
            {
                return Q_01;
            }
            if (i >=1 && l == i)
            {
                return Q_1 + Q_2 * G;
            }
            if (i >= 1 && l == i+1)
            {
                return Q_2;
            }
            return new Matrix();
        }
    }
    }

